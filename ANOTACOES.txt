1. Paginação ficou como tarefa extra, link com tutorial para usar:
https://www.youtube.com/watch?v=VZ5yPs_KEME


2. Biblioteca para acessibilidade da div de modal/dialog acessível (aquele efeito de aparecer algo na frente da tela e o resto escurecer para trás desse algo, pode ser um form, enquanto isso). Além disso, seguem todas as regras de ACESSIBILIDADE:

Radix: https://www.radix-ui.com/docs/primitives/components/dialog

npm install @radix-ui/react-dialog

Depois a gente usa o modal na forma de um contexto que envolve o botão ou parte que vai ativá-lo (Olhar em Header como fica, também há documentação no link acima do componente)

Nas referências, vemos o uso do TRIGGER com a propriedade asChild

Já o PORTAL leva para outro local da DOM. Isso porque o botão está no HEADER, mas o modal não tem nada a ver. Dentro do PORTAL, usamos a OVERLAY (camada escurinha que cobre o resto da página)

Para finalizar, dentro desse portal e depois da OVERLAY vai o Content e o Title (acessibilidade)

Agora cabe a nós estilizar tudo.

Utilizamos também construção de botões estilo Radio para o modal, um radio button acessível:

https://www.radix-ui.com/docs/primitives/components/radio-group


3. CONFIGURAÇÃO DE API (principal desse módulo 3) - JSON SERVER, instalar como dependência de Desenvolvimento (-D)

https://github.com/typicode/json-server

npm i json-server -D

para executar e com porta configurada em caso da 3000 estar ocupada (-w para "vigiar" mudanças e -d 500 para adicionar um delay de 500ms para todas as requisições):

npx json-server server.json -p 3333 -w -d 500

para SIMPLIFICAR: adicionamos no package um script chamado "dev:server" esse comando sem o npx

PASSAR DATA CERTINHA NO ARUIVO JSON:

new Date().toISOString() no console do navegador para ter a string tipo:
2023-06-20T20:03:02.883Z

ATENÇÃO! A API do json-server possui várias maneiras de buscar e filtrar dados pela URL. Vale conferir pela documentação quando necessário.
